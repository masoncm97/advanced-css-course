/*
Box-Sizing: change the box model so borders and paddings aren't added to the total width/height of a box
*/
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

/* Root font size is set in the HTML selector */
/* 10px is the root font size: 1rem = 10px */
/* Browser default font size is 16px */
/* (10px/16px) * 100 gives 62.5% */
html {
  font-size: 62.5%; }

/*
Properties like font are typically inherited
Line height: 1.7 times bigger than the pre-defined line height
*/
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box; }

/* Cover: fits element within viewpowrt (and adapts) */
.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* Parent (header) is relative, and so the top and left are calculated by it's position within the parent element*/
  /* To position in center, position using 50%/50% within the parent and then translate back using the element itself */ }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 35px; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    text-align: center;
    transform: translate(-50%, -50%); }

/* backface-visibility: hidden determines if the back part is visible */
/* without this, we see a subtle shake towards the end of the animation */
.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem;
  /* Display: block takes up 100% of the width */ }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    /* animation-delay: 3s; */
    /* animation-iteration-count: 3; */
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out; }

/* Translate 0 is the current position of the element*/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInButton {
  0% {
    opacity: 0;
    transform: translateY(10rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

/* Two types of transitions in CSS: transform and keyframes */
/* Two types of transitions in CSS: transform and keyframes */
/* Browsers are optimized for transform and opacity changes in animations */
/* Pseudo class: special state of the selector (link, hover), used to style selectors in specific states*/
/* If adding padding, width, height use display: inline-block instead of default for text: display: inline*/
.btn {
  /* Subtle shadow is black with 20% opacity */
  /* Box-Shadow: offsetX, offsetY, blur, color */
  /* Pseudo element: (::) adds aspects to the element that you can style. Treated like a child of the parent element */
  /* pseudo element always requires content and display properties */
  /* Absolute position: needs to have a reference (the first element with a relative position that it can find) */
  /* Only animate animated button, rather than all buttons */
  /* animation: animationName duration type delay */
  /* animation-fill-mode: backwards -> apply 0% styles even before the animation begins */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all 0.2s;
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s; }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }
  .btn-animated {
    animation: moveInButton 1s ease-out 0.75s;
    animation-fill-mode: backwards; }

/* Transition: goes on initial state, transform goes on subsequent states*/
